// <auto-generated />
using System;
using FilmsWebCatalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilmsWebCatalog.Data.Migrations
{
    [DbContext(typeof(FilmsWebCatalogAppDbContext))]
    partial class FilmsWebCatalogAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Years")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = "6/1/1996",
                            FirstName = "Tom",
                            LastName = "Holland",
                            Years = 27
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = "9/1/1996",
                            FirstName = "Zendaya",
                            LastName = "Coleman",
                            Years = 27
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = "6/27/1975",
                            FirstName = "Tobey",
                            LastName = "Maguire",
                            Years = 48
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = "8/20/1983",
                            FirstName = "Andrew",
                            LastName = "Garfield",
                            Years = 40
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = "10/9/1996",
                            FirstName = "Jacob",
                            LastName = "Batalon",
                            Years = 27
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = "9/12/1997",
                            FirstName = "Sydney",
                            LastName = "Sweeney",
                            Years = 26
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = "10/4/1989",
                            FirstName = "Dakota",
                            LastName = "Johnson",
                            Years = 34
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = "6/4/1996",
                            FirstName = "Maria",
                            LastName = "Bakalova",
                            Years = 27
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = "6/21/1979",
                            FirstName = "Chriss",
                            LastName = "Pratt",
                            Years = 44
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = "4/4/1965",
                            FirstName = "Robert",
                            LastName = "Downey Jr.",
                            Years = 58
                        },
                        new
                        {
                            Id = 11,
                            DateOfBirth = "3/28/1981",
                            FirstName = "Julia",
                            LastName = "Stiles",
                            Years = 42
                        });
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = "11/7/1954",
                            Name = "Gil Junger"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = "6/28/1981",
                            Name = "Jon Watts"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = "11/7/1978",
                            Name = "Will Gluck"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = "3/10/1970",
                            Name = "Ivaylo Penchev"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = "7/18/1971",
                            Name = "Joe Russo"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = "9/10/1968",
                            Name = "Guy Ritchie"
                        });
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DateOfReleasing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectorID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("UserID");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfReleasing = "12/17/2021",
                            DirectorID = 2,
                            GenreID = 1,
                            Rating = 8.1999999999999993,
                            Title = "Spider-Man: No Way Home",
                            UserID = "68f1bb45-f590-4c77-9da3-f5971207df55"
                        },
                        new
                        {
                            Id = 2,
                            DateOfReleasing = "12/22/2023",
                            DirectorID = 3,
                            GenreID = 2,
                            Rating = 6.2999999999999998,
                            Title = "Anyone But You",
                            UserID = "68f1bb45-f590-4c77-9da3-f5971207df55"
                        },
                        new
                        {
                            Id = 3,
                            DateOfReleasing = "2/14/2024",
                            DirectorID = 2,
                            GenreID = 1,
                            Rating = 3.7000000000000002,
                            Title = "Madame Web",
                            UserID = "68f1bb45-f590-4c77-9da3-f5971207df55"
                        },
                        new
                        {
                            Id = 4,
                            DateOfReleasing = "6/4/2021",
                            DirectorID = 4,
                            GenreID = 2,
                            Rating = 7.7999999999999998,
                            Title = "Last Call",
                            UserID = "68f1bb45-f590-4c77-9da3-f5971207df55"
                        },
                        new
                        {
                            Id = 5,
                            DateOfReleasing = "5/5/2023",
                            DirectorID = 1,
                            GenreID = 1,
                            Rating = 7.9000000000000004,
                            Title = "Guardians of the Galaxy Vol. 3",
                            UserID = "68f1bb45-f590-4c77-9da3-f5971207df55"
                        },
                        new
                        {
                            Id = 6,
                            DateOfReleasing = "4/27/2018",
                            DirectorID = 5,
                            GenreID = 5,
                            Rating = 8.4000000000000004,
                            Title = "Avengers: Infinity War",
                            UserID = "68f1bb45-f590-4c77-9da3-f5971207df55"
                        },
                        new
                        {
                            Id = 7,
                            DateOfReleasing = "1/1/2010",
                            DirectorID = 6,
                            GenreID = 3,
                            Rating = 7.5999999999999996,
                            Title = "Sherlok Holmes",
                            UserID = "68f1bb45-f590-4c77-9da3-f5971207df55"
                        },
                        new
                        {
                            Id = 8,
                            DateOfReleasing = "3/31/1999",
                            DirectorID = 1,
                            GenreID = 2,
                            Rating = 7.2999999999999998,
                            Title = "10 things I hate you about you",
                            UserID = "68f1bb45-f590-4c77-9da3-f5971207df55"
                        },
                        new
                        {
                            Id = 9,
                            DateOfReleasing = "7/21/2023",
                            DirectorID = 2,
                            GenreID = 5,
                            Rating = 8.4000000000000004,
                            Title = "Oppenheimer",
                            UserID = "68f1bb45-f590-4c77-9da3-f5971207df55"
                        });
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.FilmActor", b =>
                {
                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("FilmId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("FilmsActors");

                    b.HasData(
                        new
                        {
                            FilmId = 1,
                            ActorId = 1
                        },
                        new
                        {
                            FilmId = 1,
                            ActorId = 2
                        },
                        new
                        {
                            FilmId = 1,
                            ActorId = 3
                        },
                        new
                        {
                            FilmId = 1,
                            ActorId = 4
                        },
                        new
                        {
                            FilmId = 1,
                            ActorId = 5
                        },
                        new
                        {
                            FilmId = 2,
                            ActorId = 6
                        },
                        new
                        {
                            FilmId = 3,
                            ActorId = 6
                        },
                        new
                        {
                            FilmId = 3,
                            ActorId = 7
                        },
                        new
                        {
                            FilmId = 4,
                            ActorId = 8
                        },
                        new
                        {
                            FilmId = 5,
                            ActorId = 8
                        },
                        new
                        {
                            FilmId = 5,
                            ActorId = 9
                        },
                        new
                        {
                            FilmId = 6,
                            ActorId = 1
                        },
                        new
                        {
                            FilmId = 6,
                            ActorId = 9
                        },
                        new
                        {
                            FilmId = 6,
                            ActorId = 10
                        },
                        new
                        {
                            FilmId = 7,
                            ActorId = 10
                        },
                        new
                        {
                            FilmId = 8,
                            ActorId = 11
                        },
                        new
                        {
                            FilmId = 9,
                            ActorId = 10
                        });
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "thriller"
                        },
                        new
                        {
                            Id = 5,
                            Name = "drama"
                        },
                        new
                        {
                            Id = 6,
                            Name = "romance"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "68f1bb45-f590-4c77-9da3-f5971207df55",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2f2a9449-2b76-4c88-acf5-12ac6df49e11",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "TEST@SOFTUNI.BG",
                            PasswordHash = "AQAAAAEAACcQAAAAEJNkIQXC2CWkNT8U/r8wmwyJ6wRlfGIWEvo05quRB8jlSDqHDGwDgrf8VnoIc19rvw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e8ffbcdf-5c3d-409b-9e29-3a7b72a2e8bc",
                            TwoFactorEnabled = false,
                            UserName = "test@softuni.bg"
                        },
                        new
                        {
                            Id = "96be1601-466f-4a4d-a9c5-a8aac54331d5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "609470ea-d5aa-4c21-9081-41c4ef0ab5ff",
                            Email = "admin@mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@mail.com",
                            NormalizedUserName = "admin@mail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEFKznc47WCHMVMiEC3SlgqJ8lMvfaGrSn0eWcbZlERppUu+YsFRyRdKlKQl3H7vMfQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1e6d9d2f-f037-40a3-ab29-59f5e2db03bf",
                            TwoFactorEnabled = false,
                            UserName = "admin@mail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.Film", b =>
                {
                    b.HasOne("FilmsWebCatalog.Data.Models.Director", "Director")
                        .WithMany("Films")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmsWebCatalog.Data.Models.Genre", "Genre")
                        .WithMany("Films")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.FilmActor", b =>
                {
                    b.HasOne("FilmsWebCatalog.Data.Models.Actor", "Actor")
                        .WithMany("FilmsActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FilmsWebCatalog.Data.Models.Film", "Film")
                        .WithMany("FilmsActors")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.Actor", b =>
                {
                    b.Navigation("FilmsActors");
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.Director", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.Film", b =>
                {
                    b.Navigation("FilmsActors");
                });

            modelBuilder.Entity("FilmsWebCatalog.Data.Models.Genre", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
